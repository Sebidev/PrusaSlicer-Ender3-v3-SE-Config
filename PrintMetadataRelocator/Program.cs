using System.Globalization;

if (args.Length != 1)
    Environment.Exit(1);

var filename = args[0];

if (!File.Exists(filename))
    Environment.Exit(1);

var takeLastLineCount = 500;
var lines = File.ReadAllLines(filename);

if (lines[0] == ";FLAVOR:Marlin")
    Environment.Exit(0);

if (lines.Length <= takeLastLineCount)
    takeLastLineCount = lines.Length;

var filamentUsedMillimeter = 0f;
var timeInSeconds = 0;
var layerHeight = 0f;

var timeMults = new Dictionary<char, int>()
{
    { 's', 1 },
    { 'm', 60 },
    { 'h', 60 * 60 },
    { 'd', 60 * 60 * 24 }
};

var lineTrackers = new Dictionary<string, Action<string>>()
{
    { "; filament used [mm] = ", x => filamentUsedMillimeter = float.Parse(x, CultureInfo.InvariantCulture) },
    { "; layer_height = ", x => layerHeight = float.Parse(x, CultureInfo.InvariantCulture) },
    {
        "; estimated printing time (normal mode) = ",
        x => timeInSeconds = x.Split(' ').Select(y => int.Parse(y[..^1], CultureInfo.InvariantCulture) * timeMults[y[^1]]).Sum()
    }
};

for (int i = lines.Length - takeLastLineCount; i < lines.Length; i++)
{
    var line = lines[i];
    foreach (var (key, value) in lineTrackers)
    {
        if (line.StartsWith(key))
        {
            value(line[key.Length..]);
            break;
        }
    }
}

Console.WriteLine($"Filament used: {filamentUsedMillimeter}mm");
Console.WriteLine($"Time: {timeInSeconds}s");
Console.WriteLine($"Layer Height: {layerHeight}");

var extraLines = new List<string>()
{
    ";FLAVOR:Marlin",
    $";TIME:{timeInSeconds:0.00}",
    $";Filament used:{filamentUsedMillimeter / 1000:0.00000}m",
    $";Layer height:{layerHeight}",
    ";generated by https://github.com/suchmememanyskill/PrusaSlicer-Ender3-v3-SE-Config at " + DateTimeOffset.Now,
    ";",
    ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
};

File.WriteAllLines(filename, extraLines.Concat(lines));